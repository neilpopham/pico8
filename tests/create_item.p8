pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- create_item
-- by neil popham

local dir={left=1,right=2}
local drag={air=1,ground=0.8,gravity=0.15}

function round(x)
 return flr(x+0.5)
end

function create_item(x,y)
 local i={
  x=x,
  y=y
 }
 return i
end

function create_moveable_item(x,y,a)
 local i=create_item(x,y)
 i.dx=0
 i.dy=0
 i.max={dx=1,dy=2}
 i.ax=a[1]
 i.ay=a[2]
 i.is={grounded=true}
 i.anim={
  init=function(self,stage,face)
   -- record frame count for each stage face
   for s in pairs(self.stage) do
    for f=1,2 do
     self.stage[s].face[f].fcount=#self.stage[s].face[f].frames
    end
   end
   -- init current values
   self.current:set(stage,face)
  end,
  stage={},
  current={ 
   reset=function(self)
    self.frame=1
    self.tick=0
    self.loop=true
   end,
   set=function(self,stage,face)
    self.reset(self)
    self.stage=stage
    self.face=face or self.face
   end
  },
  add_stage=function(self,name,ticks,loop,left,right,next)
   self.stage[name]=create_stage(ticks,loop,left,right,next)
  end
 }
 i.draw=function(self)
  sprite=self.animate(self)
  spr(sprite,self.x,self.y)
 end
 i.animate=function(self)
  local current=self.anim.current
  local stage=self.anim.stage[current.stage]
  local face=stage.face[current.face]
  if current.loop then
   current.tick=current.tick+1
   if current.tick==stage.ticks then
    current.tick=0
    current.frame=current.frame+1
    if current.frame>face.fcount then
     if stage.next then
      current:set(stage.next)
      face=self.anim.stage[current.stage].face[current.face]
     elseif stage.loop then
      current.frame=1
     else
      current.frame=face.fcount
      current.loop=false
     end
    end
   end 
  end
  return face.frames[current.frame]
 end 
 return i
end

function create_controllable_item(x,y,a)
 local i=create_moveable_item(x,y,a)
 i.update=function(self)
  local face=self.anim.current.face

  -- horizontal movement
  if btn(0) then
   self.anim.current.face=dir.left
   if face==dir.right then
    self.anim.current:set("turn")
   end   
   p.dx=p.dx-p.ax
  elseif btn(1) then
   self.anim.current.face=dir.right
   if face==dir.left then
    self.anim.current:set("turn")
   end
   p.dx=p.dx+p.ax
  else
   if p.is.grounded then
    self.anim.current:set("still")
    p.dx=p.dx*drag.ground
   else
    p.dx=p.dx*drag.air
   end   
  end
  p.dx=mid(-p.max.dx,p.dx,p.max.dx)
  p.x=p.x+round(p.dx)

  -- vertical movement

 end
 return i
end

function create_stage(ticks,loop,left,right,next)
 local s={
  ticks=ticks,
  loop=loop,
  face={{frames=left},{frames=right}},
  next=next
 }
 return s
end

function _init()
 p=create_controllable_item(63,63,{0.05,-1.75})
 p.anim:add_stage("still",1,false,{16},{17})
 p.anim:add_stage("walk",10,false,{18},{21})
 p.anim:add_stage("turn",5,false,{21,19,22,16},{18,19,20,17},"walk")
 p.anim:init("still",dir.right)
end

function _update60()
 p:update()
end

function _draw()
 cls()
 p:draw()


 print("current.frame:"..p.anim.current.frame,0,10)
 print("face:"..p.anim.current.face,0,0)
 print("tick:"..p.anim.current.tick,0,20)
 print("dx:"..p.dx,0,30)
end

__gfx__
00000000777000002228888800000777222888880000999000999000099900000009990000000000000000000000000000000000000000000000000000000000
000000002228888833bba7ab2228888833bba7ab2228888822288888222888882228888800000000000000000000000000000000000000000000000000000000
0070070033bba7ab2288888833bba7ab2288888833bba7ab33bba7ab33bba7ab33bba7ab00000000000000000000000000000000000000000000000000000000
00077000228888882228888822888888222888882288888822888888228888882288888800000000000000000000000000000000000000000000000000000000
00077000222888880222222022288888022222202228888822288888222888882228888800000000000000000000000000000000000000000000000000000000
00700700022222200000000002222220000000000222222002222220022222200222222000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000028002800280028002800280028002800280028002800280028002800280028000000000000000000000000000000000000000000000000000000000
000000000000000022288e8822288e880000000022288e8800000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000033bbb98833bbb9bb22288e8822bbb9bb22288e88000000000000000000000000000000000000000000000000000000000000000000000000
22288e8822288e8822888e8822888e8822bbb9bb22888e8833bbb988000000000000000000000000000000000000000000000000000000000000000000000000
33bb8e882288babb22288e8822288e8822888e8822288e8822888e88000000000000000000000000000000000000000000000000000000000000000000000000
22888e8822888e88022222200222222022288e880222222022288e88000000000000000000000000000000000000000000000000000000000000000000000000
22288e8822288e880288000000282800022222200000288002222220000000000000000000000000000000000000000000000000000000000000000000000000
02222220022222200000000000000000002880000000000000028800000000000000000000000000000000000000000000000000000000000000000000000000
00288800002888000002880000000000000028800028800002880000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001000000110000001100000011000000110000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001000000110000001100000011000000110000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001000000110000001100000011000000110000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001000000110000001100000011000000110000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001000000110000001100000011000000110000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001000000110000001100000011000000110000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000
