pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- create_item
-- by neil popham

-- http://pico-8.wikia.com/wiki/btn
local pad={left=0,right=1,up=2,down=3,btn1=4,btn2=5}

-- https://github.com/nesbox/tic-80/wiki/key-map
-- local pad={left=2,right=3,up=0,down=1,btn1=4,btn2=5,btn3=6,btn4=7}

-- pad_left=0 pad_right=1 pad_up=2 pad_down=3
-- pad_left=2 pad_right=3 pad_up=0 pad_down=1
-- pad_b1=4 pad_b2=5 pad_b3=6 pad_b4=7

local dir={left=1,right=2}
local drag={air=1,ground=0.8,gravity=0.25,wall=0}

function round(x) return flr(x+0.5) end

function create_item(x,y)
 local i={
  x=x,
  y=y
 }
 return i
end

function create_moveable_item(x,y,ax,ay)
 local i=create_item(x,y)
 i.dx=0
 i.dy=0
 i.min={dx=0.05,dy=0.05}
 i.max={dx=1,dy=2}
 i.ax=ax
 i.ay=ay
 i.is={
  grounded=false,
  jumping=false,
  sliding=false,
  falling=false,
  invisible=false
 }
 i.anim={
  init=function(self,stage,face)
   -- record frame count for each stage face
   for s in pairs(self.stage) do
    for f=1,2 do
     self.stage[s].face[f].fcount=#self.stage[s].face[f].frames
    end
   end
   -- init current values
   self.current:set(stage,face)
  end,
  stage={},
  current={
   reset=function(self)
    self.frame=1
    self.tick=0
    self.loop=true
    self.transitioning=false
   end,
   set=function(self,stage,face)
    if self.stage==stage then return end
    self.reset(self)
    self.stage=stage
    self.face=face or self.face
   end
  },
  add_stage=function(self,name,ticks,loop,left,right,next)
   self.stage[name]=create_stage(ticks,loop,left,right,next)
  end
 }
 i.camera=function(self)
  local x local y
  if self.x<64 then
   x=0
  elseif self.x>448 then
   x=384
  else
   x=self.x-64
  end
  if self.y<64 then
   y=0
  elseif self.y>192 then
   y=128
  else
   y=self.y-64
  end
  camera(x,y)
 end
 i.set_state=function(self, state)
  for s in pairs(self.is) do
   self.is[s]=false
  end
  self.is[state]=true
 end
 i.draw=function(self)
  if self.is.invisible then return end
  sprite=self.animate(self)
  spr(sprite,self.x,self.y)
 end
 i.animate=function(self)
  local current=self.anim.current
  local stage=self.anim.stage[current.stage]
  local face=stage.face[current.face]
  if current.loop then
   current.tick=current.tick+1
   if current.tick==stage.ticks then
    current.tick=0
    current.frame=current.frame+1
    if current.frame>face.fcount then
     if stage.next then
      current:set(stage.next)
      face=self.anim.stage[current.stage].face[current.face]
     elseif stage.loop then
      current.frame=1
     else
      current.frame=face.fcount
      current.loop=false
     end
    end
   end
  end
  return face.frames[current.frame]
 end
 i.canmovex=function(self,flag)
  local x=self.x+round(self.dx)
  if self.dx>0 then x=x+7 end
  for _,y in pairs({self.y,self.y+7}) do
   local tx=flr(x/8)
   local ty=flr(y/8)
   tile=mget(tx,ty)
   -- note
   -- this won't let us jump off at the moment
   -- need to know we can jump slide
   -- even if not moving into the wall
   if fget(tile,0) or (flag and fget(tile,flag)) then
    if self.is.grounded then
     self.dx=0
    else
     if fget(tile,1) then
      if self.is.sliding==false then self.dy=0 end
      self.anim.current:set("wall")
      self:set_state("sliding")
     end
    end
    return false
   end
  end
  return true
 end
 i.canmovey=function(self)
  local y=self.y+round(self.dy)
  if self.dy>0 then y=y+7 end
  for _,x in pairs({self.x,self.x+7}) do
   local tx=flr(x/8)
   local ty=flr(y/8)
   tile=mget(tx,ty)
   if fget(tile,0) then
    if self.dy>0 then
     self.y=(ty-1)*8
     if self.is.falling then
      self.btn.tick=0
     end
     self:set_state("grounded")
     if not self.anim.current.transitioning then
      self.anim.current:set(round(self.dx)==0 and "still" or "walk")
     end
    else
     self.y=8+((ty)*8)
     if self.is.jumping then
      self:set_state("falling")
      self.anim.current:set("jump_fall")
      self.btn.tick=self.max.btn
      self.dy=0
     end
    end
    return false
   end
  end
  return true
 end
 return i
end

function create_controllable_item(x,y,ax,ay)
 local i=create_moveable_item(x,y,ax,ay)
 i.min.btn=5
 i.max.btn=20
 i.btn={tick=0}
 i.can_jump=function(self)
  if self.is.jumping and self.btn.tick>0 then
   return true
  end
  if self.is.grounded then
   return true
  end
  if self.is.sliding then
   return true
  end
  return false
 end
 i.update=function(self)
  local face=self.anim.current.face
  local stage=self.anim.current.stage

  local check=function(self,stage,face)
   if face~=self.anim.current.face then
    if stage=="still" then stage="walk" end
    if stage=="jump_fall" then stage="fall" end
    if not self.anim.current.transitioning then
     self.anim.current:set(stage.."_turn")
     self.anim.current.transitioning=true
    end
   end
  end

  -- horizontal movement
  if btn(pad.left) then
   self.anim.current.face=dir.left
   check(self,stage,face)
   self.dx=self.dx-self.ax
  elseif btn(pad.right) then
   self.anim.current.face=dir.right
   check(self,stage,face)
   self.dx=self.dx+self.ax
  else
   if self.jumping then
    self.dx=self.dx*drag.air
   else
    self.dx=self.dx*drag.ground
   end
  end
  self.dx=mid(-self.max.dx,self.dx,self.max.dx)
  if abs(self.dx)<self.min.dx then self.dx=0 end
  if self.dx~=0 then
   if self.canmovex(self) then
    self.x=self.x+round(self.dx)
    if self.is.sliding then
     self.is.sliding=false
     if not self.anim.current.transitioning then
      self.anim.current:set("fall")
     end
    end
   end
  end

  -- vertical movement
  if btn(pad.btn1)
   and self.can_jump(self) then
   self.btn.tick=self.btn.tick+1
  else
   self.btn.tick=0
  end
  if self.btn.tick>=self.min.btn
   and self.btn.tick<=self.max.btn then
   self:set_state("jumping")
   self.anim.current:set("jump")
   self.dy=self.dy+self.ay
  end

  if self.is.sliding then
   self.dy=self.dy+drag.wall
  else
   self.dy=self.dy+drag.gravity
  end
  self.dy=mid(-self.max.dy,self.dy,self.max.dy)
  if abs(self.dy)<self.min.dy then self.dy=0 end
  if self.dy~=0 then
   if self.canmovey(self) then
    self.y=self.y+round(self.dy)
    self.is.grounded=false
    if round(self.dy)>0
     and self.is.sliding==false
     and self.is.grounded==false
     and self.is.falling==false then
     if self.is.jumping then
       self.anim.current:set("jump_fall")
     else
       self.anim.current:set("fall")
     end
     self:set_state("falling")
    end
   end
  end

 end
 return i
end

function create_stage(ticks,loop,left,right,next)
 local s={
  ticks=ticks,
  loop=loop,
  face={{frames=left},{frames=right}},
  next=next
 }
 return s
end

function _init()
 p=create_controllable_item(120,232,0.1,-1.75)
 p.anim:add_stage("still",1,false,{6},{12})
 p.anim:add_stage("walk",5,true,{1,2,3,4,5,6},{7,8,9,10,11,12})
 p.anim:add_stage("jump",1,false,{1},{7})
 p.anim:add_stage("fall",1,false,{32},{33})
 p.anim:add_stage("wall",1,false,{13},{28})
 p.anim:add_stage("walk_turn",5,false,{20,18,21,6},{17,18,19,12},"still")
 p.anim:add_stage("jump_turn",5,false,{25,26,27},{22,23,24},"jump")
 p.anim:add_stage("fall_turn",5,false,{25,26,27},{22,23,24},"fall")
 p.anim:add_stage("wall_turn",5,false,{29,30,31},{14,15,16},"jump")
 p.anim:add_stage("jump_fall",5,false,{2,3},{8,9},"fall")
 p.anim:init("still",dir.right)

 gem_count=0
 gem_total=0
 gems={}
 local x local y
 for x=0,63 do for y=0,31 do
  local s=mget(x,y)
  if s==62 then
   gem_total=gem_total+1
   mset(x,y,0)
   local g=create_moveable_item(x*8,y*8,0,0)
   g.anim:add_stage("still",1,false,{62},{})
   g.anim:init("still",dir.left)
   g.update=function(self)
    if self.is.invisible then return end
    if p.x<self.x+7
     and p.x+8>self.x
     and p.y<self.y+7
     and p.y+8>self.y then
     self.is.invisible=true
     gem_count=gem_count+1
    end
   end
   gems[#gems+1]=g
  end
 end end

 enemies={{64,64},{24,88},{32,16}}
 for i,enemy in pairs(enemies) do
  enemies[i]=create_moveable_item(enemy[1],enemy[2],0.2,-1.75)
  enemies[i].anim:add_stage("walk",5,true,{64,65,66,67},{64,65,66,67})
  enemies[i].anim:add_stage("walk_turn",5,false,{68,69,70},{68,69,70},"walk")
  enemies[i].anim:init("walk",dir.right)
  enemies[i].update=function(self)
   local dir=self.anim.current.face==1 and -1 or 1
   self.dx=(self.dx+(self.ax*dir))*drag.ground
   self.dx=mid(-self.max.dx,self.dx,self.max.dx)
   if abs(self.dx)<self.min.dx then self.dx=self.min.dx end
    if self.anim.current.tick%2==0 then
        if self.canmovex(self,2) then
        self.x=round(self.x+self.dx)
    else
     self.dx=0
     self.anim.current.face=self.anim.current.face==1 and 2 or 1
     self.anim.current:set("walk_turn")
    end
   end
  end
 end

 waters={{64,32},{72,32},{80,32}}
 for i,water in pairs(waters) do
  waters[i]=create_moveable_item(water[1],water[2],0,0)
  waters[i].anim:add_stage("still",5,true,{44,45,46,47},{})
  waters[i].anim:init("still",dir.left)
 end

 -- dump fget data to an array format that can be used in tic-80 code
 --d="" for s=0,127 do d=d..fget(s).."," end printh(d,"@clip")
end

function _update60()
 p:update()
 for _,gem in pairs(gems) do gem:update() end
 --for _,enemy in pairs(enemies) do enemy:update() end
end

function _draw()
 cls()
 p:camera()
 map(0,0)
 --for _,enemy in pairs(enemies) do enemy:draw() end
 --for _,water in pairs(waters) do water:draw() end
 for _,gem in pairs(gems) do gem:draw() end
 p:draw()
 camera(0,0)
 spr(62,98,1)
 print(gem_count..":"..gem_total,107,2)

--[[
 print("stage:"..p.anim.current.stage,0,0)
 print("dir:"..p.anim.current.face,62,0)
 print("frame:"..p.anim.current.frame,0,7)
 print("t:"..p.anim.current.tick,62,7)
 print("b:"..p.btn.tick,62,14)
 print("dx:"..p.dx,0,14) print("dy:"..p.dy,30,14)
 print("grounded:"..(p.is.grounded and "t" or "f"),86,0)
 print("jumping:"..(p.is.jumping and "t" or "f"),86,7)
 print("falling:"..(p.is.falling and "t" or "f"),86,14)
]]
end

__gfx__
0000000022288e8822288e8822288e8800000000000000000000000022288e8822288e8822288e8800000000000000000000000022288e8822288e8822288f88
0000000033bb8e8833bb8e8833bb8e8822288e8800000000000000002288babb2288babb2288babb22288e88000000000000000033bb8e8833bbb98833b97779
0000000022888e8822888e8822888e8833bb8e8822288e8822288e8822888e8822888e8822888e882288babb22288e8822288e8822888e8822888e8822888f88
0000000022288e8822288e8822288e8822888e8833bb8e8833bb8e8822288e8822288e8822288e8822888e882288babb2288babb22288e8822288e8822288e88
0000000002222220022222200222222022288e8822888e8822888e8802222220022222200222222022288e8822888e8822888e88022222200222222002222220
000000000000288000288000000000000222222022288e8822288e880288000000028800000000000222222022288e8822288e88288000002880000028800000
00000000000000000000000002882880002880000222222002222220000000000000000002882880000288000222222002222220288000002880000028800000
00000000000002880000028800000000288000000228800000288280288000002880000000000000000002880002288002828800000000000000000000000000
2222222222288e8822288f880000000022288e880000000022288e8822288f8822288e8822288e8822288e8822288e8822288e8822288e8822288f8822288e88
33bb979b33bbb98833b9777922288e8822bb979b22288e8833bbb98833b9777922bb979b22bb979b33b9777933bbb9882288babb22bb979b33b9777933bbb988
22888e8822888e8822888f8822bb979b22888e8833bbbe8822888e8822888f8822888e8822888e8822888e8822888e8822888e8822888e8822888f8822888e88
22288e8822288e8822288e8822888e8822288e8822888e8822288e8822288e8822288e8822288e8822288e8822288e8822288e8822288e8822288e8822288e88
02222220022222200222222022288e880222222022288e8802222220022222200222222002222220022222200222222002222220022222200222222002222220
02880000028800000028280002222220000028800222222000002880000028000028800002880000002800000002880000000288000002880000028800002880
28800000000000000000000000288000000000000002880000000000000000000000000000000000000000000000000000000288000002880000028800000288
00000000000288000000000000002880002880000288000000288000002800000288000000028800000028000000288000000000000000000000000000000000
22288e8822288e880000000000000000000000000000000000000000000000000000000000000000000000000000000011001100070007000000000000000000
33bb8e882288babb00000000000000000000000000000000000000000000000000000000000000000000000000000000c700c700011001100000000000000000
22888e8822888e8800000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccc0cc00cc000000000c00c7007
22288e8822288e8800000000000000000000000000000000000000000000000000000000000000000000000000000000cccccccccccccccc00cc00cccccccccc
02222220022222200000000000000000000000000000000000000000000000000000000000000000000000000000000011cc11ccccccccccc7ccc7cccccccccc
00288000000288000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111c11cc11ccccccccc1cc11cc1
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005151515111111111cc11cc1111111111
28800000000002880000000000000000000000000000000000000000000000000000000000000000000000000000000015151515515151511111111151515151
b3bb3bbb00000003b00000003333333300000000000000000000004a44444444000ddd00000000000000000000000000d100001d0000000000010000228e8000
bbbbbbbb0000003bbb0000000303b3b000000000000020000000049a44444444055dd6d00000000000000000000000001000000100000000001c100028bab000
3b3bb3b30000003bb0000000000300b00000000000088800000049aa4444444455dddd60000000000000000000000000000000000000000001c6c100228e8000
4b53b5350000003b0000000000000000003030000028a82009999a00444444445ddddddd00000000000000000000000000000000000000001ccc6c1002220000
4354354500000003b00000000000000003383330000888004909a000444444445ddddddd000000000005d6001010101000000000011cc7c001ccc10000000000
4454454400000000000000000000000008333383000023b04000a00044444444555ddddd5d6000000055ddd07070707000000000011cc7c0001c100000000000
444444440000000300000000000000003333833300033b0044099000444444445555555055dd05000d055dd0606060601000000101111c100001000000000000
444444440000000000000000000000000333333000003b000444000044444444055555000550055055d055006d6d6d6dd100001d22888e880000000000000000
0000000000011000000cc000000770000000000000000000000aa000ccc667660000000000000000000000000000000000000000000000000000000000000000
44499a9944499a9944499a9944499a99000000000008800044499a9900111d110000000000000000000000000000000000000000000000000000000000000000
44999a9944999a9944999a9944999a990002200044499a9944999a99cc6667660000000000000000000000000000000000000000000000000000000000000000
44499a9944499a9944499a9944499a9944499a9944999a9944499a99ccc667660000000000000000000000000000000000000000000000000000000000000000
28e028e0028e08e02028e08e28028e0e44999a9944499a9928028e0e0cccccc00000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000044499a992028e08e00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000003000000000300000000000028e08e00300300000300000000000000000000000000000000000000000000000000000000000000000000000000000
0300030030300030003030030030030033333333333033033030030300c6c6000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000003010000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
3737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
373a3e00000000003e0000000000003e0000000000000000003e0000000000000000000000000000000000000000000000000000000000000000000000003e3700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
37303032000000003e0000000000313030320000000000390000003a00000000000000003e00003e00003e00000000000000003e00000000000000000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
373300000000000000000000000000330000000000313030303030303200000000000000000000000000000000000000003900003a3800000000000000393e3700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3700000000003a0039000000000000000000000000000033000033000000000000390039383a3900393a3839000000313030303030303200000000313030303700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3700000000313030303030320000003a3900000000003a000000000000000031303030303030303030303030303032000000330033330000000000003300333700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3700003a0000003300003300003130303030320000313030320000000000000033000000330000003333000033000000000000393a003e00390000000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3731303030320000000000000000330033000000000000330000000000000000000000000000000000003e00000000003130303030303030303200000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
37000033000000000000003e003a003900000000000000000000003e00003e00003e00000000000000000000000000000000330000330033000000000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3700000000000000313030303030303030320000000000003a3900003a0000003a0039000000000000393a00000000000000000000000000000000000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
373e00000000000000003300003300333300003e003130303030303030303030303030303200003130303030303200000000000000000000000000000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
370000000000000000000000000000000000000000000033000033000033330033003300000000000000330000003e0000000000000000000000003a39003e3700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
373e00000000000000003a0000000000003900000000000000000000000000000000000000000000000000000000000000003a3e39000000000031303030303700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3730303200000000313030303200313030303032000000000000000000000000000000000000000000000000000000003130303030320000000000330000333700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
37003300003e00000000003300000033000033000000003e00003e00000000003e00003e0000000000000000000000000000330000000000000000000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3700000000000000000000393e3e3e00000000000000000000000000000000000039000000000000000000003900003a000039000000000000003a000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
37000000000000000031303030303030320000390000390000003a3900003130303030303032003e00313030303030303030303030320000313030320000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
37000000393a0000003a00330033330000003130303030303030303030303200333300003300003900003300330033330000330033000000003300000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3700313030303030303032000000000000000000330000330000333300000000000000000031303030320000000000000000000000000000000000000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3700003300333300330000000000000000000000000000000000000000000000003e003e000000330000000000003e00000000000000000000000039003e003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
370000000000000000003e00000000000000000000000000000000000000000000000000000000000000000000000000003a003900000000000031303030303700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
373a3e000000000039003a000000000000003e393e3a000000000000003a3900000000000000000000000000390000003130303030320000000000330000333700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
373030303200313030303030320000003130303030303200000000313030303032000000000000000000313030303200000000330000000000000000003e003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
373300330000000033330000000000000033000033000000000000000033330000000000003e3e3e39000033003300000000000000393a00000000000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3700000000000000000000000000000000000000000000000000000000000000000000313030303030320000000000000000003130303030303200000000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
37000000000000000000000000000000000000000000003e3e3e3e0000000000000000000000330000000000000000000000003900330033330000000000393700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
370000003e00000000000000000000000000000000003a390000390000000000000000000000000000000000000000313030303032000000000031303030303700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
370031303030320000000000000000000000000031303030303030303032390000000000000000000000000000000000330033000000003e000000000033333700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
370000003300000039003a3839000000000000003a3737373737373737303030323a3900383a3900003900003a003900000000003a00003900000039003a383700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3730303030303030303030303030303030303030303737373737373737373737303030303030303030303030303030303030303030303030303030303030303700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
