pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- create_item
-- by neil popham

local dir={left=1,right=2}
local drag={air=1,ground=0.8,gravity=0.15}

function round(x)
 return flr(x+0.5)
end

function create_item(x,y)
 local i={
  x=x,
  y=y
 }
 return i
end

function create_moveable_item(x,y,a)
 local i=create_item(x,y)
 i.dx=0
 i.dy=0
 i.max={dx=1,dy=2}
 i.ax=a[1]
 i.ay=a[2]
 i.is={grounded=true}
 i.anim={
  init=function(self,stage,face)
   -- record frame count for each stage face
   for s in pairs(self.stage) do
    for f=1,2 do
     self.stage[s].face[f].fcount=#self.stage[s].face[f].frames
    end
   end
   -- init current values
   self.current:set(stage,face)
  end,
  stage={},
  current={ 
   reset=function(self)
    self.frame=1
    self.tick=0
    self.loop=true
   end,
   set=function(self,stage,face)
    self.reset(self)
    self.stage=stage
    self.face=face or self.face
   end
  },
  add_stage=function(self,name,ticks,loop,left,right,next)
   self.stage[name]=create_stage(ticks,loop,left,right,next)
  end
 }
 i.draw=function(self)
  sprite=self.animate(self)
  spr(sprite,self.x,self.y)
 end
 i.animate=function(self)
  local current=self.anim.current
  local stage=self.anim.stage[current.stage]
  local face=stage.face[current.face]
  if current.loop then
   current.tick=current.tick+1
   if current.tick==stage.ticks then
    current.tick=0
    current.frame=current.frame+1
    if current.frame>face.fcount then
     if stage.next then
      current:set(stage.next)
      face=self.anim.stage[current.stage].face[current.face]
     elseif stage.loop then
      current.frame=1
     else
      current.frame=face.fcount
      current.loop=false
     end
    end
   end 
  end
  return face.frames[current.frame]
 end 
 return i
end

function create_controllable_item(x,y,a)
 local i=create_moveable_item(x,y,a)
 i.update=function(self)
  local face=self.anim.current.face
  local stage=self.anim.current.stage
  -- horizontal movement
  if btn(0) then
   self.anim.current.face=dir.left
   if face==dir.right then
    if stage=="still" then stage="walk_turn" else stage=stage.."_turn" end
    self.anim.current:set(stage)
   elseif stage=="still" then
    self.anim.current:set("walk")
   end
   p.dx=p.dx-p.ax
  elseif btn(1) then
   self.anim.current.face=dir.right
   if face==dir.left then
    if stage=="still" then stage="walk" end
    self.anim.current:set(stage.."_turn")
   elseif stage=="still" then
    self.anim.current:set("walk")
   end
   p.dx=p.dx+p.ax
  else
   if p.is.grounded then
    self.anim.current:set("still")
    p.dx=p.dx*drag.ground
   else
    p.dx=p.dx*drag.air
   end   
  end
  p.dx=mid(-p.max.dx,p.dx,p.max.dx)
  p.x=p.x+round(p.dx)
  -- vertical movement
 end
 return i
end

function create_stage(ticks,loop,left,right,next)
 local s={
  ticks=ticks,
  loop=loop,
  face={{frames=left},{frames=right}},
  next=next
 }
 return s
end

function _init()
 p=create_controllable_item(63,63,{0.05,-1.75})
 p.anim:add_stage("still",1,false,{5},{11})
 p.anim:add_stage("walk",5,true,{0,1,2,3,4,5},{6,7,8,9,10,11})
 p.anim:add_stage("jump",1,false,{0},{6})
 p.anim:add_stage("fall",1,false,{0},{6})
 p.anim:add_stage("walk_turn",5,false,{19,17,20,5},{16,17,18,11},"walk")
 p.anim:add_stage("jump_turn",5,false,{24,25,26},{21,22,23},"jump")
 p.anim:add_stage("fall_turn",5,false,{24,25,26},{21,22,23},"fall")
 p.anim:init("still",dir.right)

 -- need a jump turn and a fall turn
 -- so, maybe turn shouldn't be a stage but a transition that any stage can have
 -- dir change in any stage moves to turn anim and then return to previous stage (not in opposite direction)
 -- record previous face/stage
 -- if face has changed 
 -- ??? somehow do turn anim then switch back to normal ...
 -- or, maybe we just use wlak_turn, fall_turn and jump_turn instead of turn and stick with current system
 --  p.anim:add_stage("walk_turn",5,false,{21,19,22,16},{18,19,20,17},"walk")
 --  p.anim:add_stage("jump_turn",5,false,{21,19,22,16},{18,19,20,17},"jump")
 --  p.anim:add_stage("fall_turn",5,false,{21,19,22,16},{18,19,20,17},"fall")
end

function _update60()
 p:update()
end

function _draw()
 cls()
 p:draw()


 print("current.frame:"..p.anim.current.frame,0,10)
 print("face:"..p.anim.current.face,0,0)
 print("tick:"..p.anim.current.tick,0,20)
 print("dx:"..p.dx,0,30)
end

__gfx__
22288e8822288e8822288e8800000000000000000000000022288e8822288e8822288e8800000000000000000000000000000000000000000000000000000000
33bb8e8833bb8e8833bb8e8822288e8800000000000000002288babb2288babb2288babb22288e88000000000000000000000000000000000000000000000000
22888e8822888e8822888e8833bb8e8822288e8822288e8822888e8822888e8822888e882288babb22288e8822288e8800000000000000000000000000000000
22288e8822288e8822288e8822888e8833bb8e8833bb8e8822288e8822288e8822288e8822888e882288babb2288babb00000000000000000000000000000000
02222220022222200222222022288e8822888e8822888e8802222220022222200222222022288e8822888e8822888e8800000000000000000000000000000000
0002880000288000028880000222222022288e8822288e880028800000028800000028800222222022288e8822288e8800000000000000000000000000000000
00000000000288000000000002880000022222200222222000000000002880000000000000002880022222200222222000000000000000000000000000000000
00000288000000000000000028800000288800000028880028800000000000000000000000000288000028880028880000000000000000000000000000000000
22288e8822288e880000000022288e880000000022288e8822288e8822288e8822288e8822288e8822288e880000000000000000000000000000000000000000
33bbb98833b9777922288e8822bb979b22288e8833bbb98833b9777922bb979b22bb979b33b9777933bbb9880000000000000000000000000000000000000000
22888e8822888e8822bb979b22888e8833bbbe8822888e8822888e8822888e8822888e8822888e8822888e880000000000000000000000000000000000000000
22288e8822288e8822888e8822288e8822888e8822288e8822288e8822288e8822288e8822288e8822288e880000000000000000000000000000000000000000
022222200222222022288e880222222022288e880222222002222220022222200222222002222220022222200000000000000000000000000000000000000000
02880000002888000222222000002880022222200000288000002800002880000288000000280000000288000000000000000000000000000000000000000000
00000000000000000028800000000000000288000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00028800000000000000288000288000028800000028800000280000028800000002880000002800000028800000000000000000000000000000000000000000
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
10000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001100000011000000110000001
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
