pico-8 cartridge // http://www.pico-8.com
version 42
__lua__

-- 67
-- 83
-- ‚¨ÖÔ∏è‚û°Ô∏è‚¨ÜÔ∏è‚¨áÔ∏èüÖæÔ∏è‚ùé

-- set palette
poke(0x5f2e,1)
pal({[0]=0,1,2,-13,4,5,6,7,8,9,10,11,-6,13,-7,0},1)

function mrnd(x,f)
    if f==nil then f=true end
    local r=x[1]+rnd((f and 1 or 0)+x[2]-x[1])
    return f and flr(r) or r
end

function range(n,m)
    return mrnd({n,m})
end

function round(n)
    return flr(n+0.5)
end

function manhattan(x1,y1,x2,y2)
    return abs(x1-x2)+abs(y1-y2)
end

function lerp(v0,v1,t)
    return v0+t*(v1-v0)
end

class=setmetatable(
    {
        new=function(_ENV,tbl)
            return setmetatable(tbl or {},{__index=_ENV})
        end
    },
    {__index=_ENV}
)

entity=class:new({
    tile=function(p)
        return p\8
    end
})

frog=entity:new({
    reset=function(_ENV)
        t=0
        stage=0
        r=range(12,16)
    end,
    update=function(_ENV)
        if stage==0 then
            if manhattan(x,y,p.x,p.y2)<range(16,24) then
                stage=1
            else
                return
            end
        end
        local dx,dy,cx,cy,tx,ty,ti
        if stage==1 then
            dx=2*d
            dy=-1
            if t==7 then sfx(0) end
        else
            dx=stage==2 and d or 0
            dy=1
        end
        cx=x+(2*d)
        cy=y+(stage==1 and -2 or 2)
        tx=tile(cx+dx)
        ty=tile(cy+dy)
        ti=mget(tx,ty)
        if fget(ti,0) then
            ti=mget(tile(cx),ty)
            if fget(ti,0) then
                if stage==1 then
                    y=ty*8+8
                else
                    y=ty*8-1
                    cy=y
                    reset(_ENV)
                end
            end
            ti=mget(tx,tile(cy))
            if fget(ti,0) then
                x=tx*8+(d==1 and -3 or 10)
                if stage==1 and t<6 then d=d==1 and -1 or 1 end
            end
            if stage>0 then stage=3 end
            dx=0
            dy=0
        end
        x+=dx
        y+=dy
        x=x%128 -- can remove
        if stage==1 then
            t+=1
            if t==r then stage=2 end
        end
    end,
    draw=function(_ENV)
        local ex=x+2*d
        local c=11
        if stage==0 then
            line(x,y,x+1,y,c)
            pset(x+(d==1 and 1 or 0),y-1,c)
        else
            line(x,y,ex,y+(stage==1 and -2 or 2),c)
        end
    end
})

player=entity:new({
    reset=function(_ENV)
        t=0
        s=0
        o1=1
        o2=0
        jc=0
        g=true
        f=1
        dx=0
        dy=0
        b=false
        dyc=0
        ct=0
    end,
    update=function(_ENV)
        local ti,hit
        if btn(‚û°Ô∏è) then dx+=0.5 f=1 end
        if btn(‚¨ÖÔ∏è) then dx-=0.5 f=-1 end

        if btn(‚ùé) or btn(üÖæÔ∏è) then
            local canjump=jc==0 and not b and g -- (g or ct>0)
            if canjump then
                jc=11
                y1=tile(y1)*8
                sfx(2)
            end
            b=true
        else
            jc=0
            b=false
        end

        if jc>0 then
            dy-=2
            jc-=1
            g=false
        end

        dy+=0.7 -- gravity
        dy=mid(-3,dy,3)
        local rdy=round(dy)

        dx*=g and 0.7 or 0.75
        dx=mid(-2,dx,2)
        local rdx=round(dx)

        hit=false
        for tx in all({tile(x), tile(x+7)}) do
            if dy>0 then
                ty=tile(y2+7+rdy)
            else
                ty=tile(y1+rdy)
            end
            ti=mget(tx,ty)
            hit=fget(ti,0)
            if hit then break end
        end
        if hit then
            if dy>0 then
                y1=(ty-1)*8
                if g==false then
                    s=1
                    dyc=rdy
                    t=0
                    sfx(1)
                end
                g=true
                jc=0
                ct=0
            else
                y1=(ty+1)*8
            end
            y2=y1
            dy=0
            rdy=0
        end

        if g and dy>0 then ct=10 end
        if ct>0 then
            -- dy=0
            ct-=1
        end

        if dy!=0 then g=false o1=0 end

        hit=false
        for ty in all({tile(y1), tile(y1+3), tile(y2+7)}) do
            tx=tile(x+rdx+(dx>0 and 7 or 0))
            ti=mget(tx,ty)
            hit=fget(ti,0)
            if hit then break end
        end
        if hit then
            x=(tx+(dx>0 and -1 or 1))*8
            dx,rdx=0,0
        end

        local adx=abs(dx)
        if adx<0.05 then dx=0 end

        if g then
            if dyc>0 then
                if t%2==0 then
                    dyc-=1
                    o1=mid(0,o1+1,2)
                    if dyc==0 then t=5 end
                end
            elseif rdx==0 then
                o1=1
                t=0
            elseif jc==0 then
                if t%5==0 then
                    if s==1 then
                        o1=1
                        s=0
                    else
                        o1=0
                        s=1
                    end
                end
            end
        else
            if dy>0 then -- have dyc counter that starts at 3 and counts down if falling
                -- o1=1
            else
                if jc>7 then o2=1 else o2=0 end
            end
        end

        if btn(‚¨áÔ∏è) and g then dy,o1=0,2 end

        x+=rdx
        x%=128

        -- i think i should really only be adding o1 and o2 when drawing
        -- as it stands the offset is changing the y value and accumulating the change
        -- i think it would make more sense and be more manageable if it didn't
        y1+=(dy+o1)
        y2+=(dy+o2)

        t+=1
    end,
    draw=function(_ENV)
        local flip=f==-1

        rectfill(x,y1+5,x+7,y2+4,12)
        spr(83,x,y2,1,1,flip) -- bottom
        spr(67,x,y1,1,1,flip) -- top

        -- color(1)
        -- print(jc,0,0)
        -- print(g,20,0)
        -- print(o1,60,0)
        -- print(o2,80,0)
        -- print(dx,0,10)
        -- print(dy,32,10)
        -- print(ct,0,20)
    end
})

p=player:new({
    x=24,
    y1=112,
    y2=112
})
p:reset()

f=frog:new({x=87,y=98,d=1})

function _update60()
    p:update()
    f:update()
end

function _draw()
    cls()

    -- local buffer=20,cx,cy
    -- if p.x<64+buffer then cx=0 else cx=p.x-64-buffer end
    -- camera(cx,0)

    map(0,0)

    p:draw()
    f:draw()

    -- print(abs(p.x-f.x),0,100,7)
    -- print(f.stage,30,100,7)
end

__gfx__
00000000777077707770777077777770777707777000000000000007700000000000000760000000000000060777777077707777000000000000000000000000
00000000707070707070707070000070700707077000000000000007700000000000000760000000000000060700007070707007000000000000000000000000
00000000700000000000000070000000000000077000000000000007700000000000000766000000000000660000007000000007000000000000000000000000
00000000700000000000000000000000000000070000000000000000700000000000000760000000000000060000000000000000000000000000000000000000
00000000700000000000000000000000000000077000000000000007700000000000000760600000000006060000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000700000000000000766000000000000660000000000000000000000000000000000000000
00000000700000000000000000000000000000070000000000000000700000000000000766000000000000660000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000060600000000006060000000000000000000000000000000000000000
00000000660000000000000000000000000000666600000060000000000000060000006600000000000000000000000000000000000000000000000000000000
00000000660000000000000000000000000000666000000066000000000000660000000600000000000000000000aaaaaaaa0000000000000000000000000000
00000000606000000000000000000000000006066600000066000000000000660000006600000000000000000000aaaaaaaa0000000000000000000000000000
00000000660060000000000000000000000000666600000060060000000060060000006600000000000000000000aaaaaaaa0000000000000000000000000000
00000000660600000000000000006000000060666060000066000000000000660000060600000000000000000000aaaaaaaa00000aaaaaa00000000000000000
00000000606006000006000006000000006006066600000066000000000000660000006600000000000000000000aaaaaaaa00000aaaaaa00000000000000000
00000000660660660660660660660660660660666600000060600000000006060000006600000066660000000000aaaaaaaa00000aaaaaa00000000000000000
000000006666666666666666666666666666666660000000660000000000006600000006000000666600000000000000000000000aaaaaa00000000000000000
03003030030030303003030000000000000000000000000000000000099999900000000000000000000000006000000000000006000000077000000000000000
03003030030030303000030000000000000000000000000000000000090000900000000000000000000000000000000000000000000000077000000000000000
03003030030030300000030000000000000000000000000000000000090000900000000000000000000000006000000000000006000000077000000000000000
03000300030030000000000000000000000000000000000000000000099999900000000000000000000000000000000000000000000000000000000000000000
03000000003030000000000000000000000000000000000000000000000090000000000000000000000000006000000000000006000000000000000000000000
00000000000300000000000000030000000800000000000000000000000990000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000003030030008080800000000000000000000090000000000000000006600000006300000000000036000000000000000000000000
00000000000000000000000033033033080808080000000000000000009990000000000000000066660000003300000000000033000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b77b30
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b77b30
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b77b30
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b77b30
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b77b30
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b77b30
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b77b30
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003b77b30
0000000000000000000000000cccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000ccccfcfc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000ccccfcfc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000cccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001010101010101010101010100000000010101010101010101010000000000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
00191212121212121212121212121a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0017212220210022002022002000150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0018000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0017000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00171c0000000000000000000000150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0018000000000000232300000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0017000000230000010400000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1314000001040000090a00000000111300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000090a0000111400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000011140000222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2300000020210000000000000000002300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0304000000000000000000002300010300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0006000000000000002324230103050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0008000000000000000103022e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0008230024242300230500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002d0b0202030302032e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000a5700d5700f57000200147000200002000010001c0001d0001d0000000006000185701b5701d570202002b1000000000000020000000000000000000000000000042000320003200032000320003200
000100000362008610026200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000472009730127401a2001a2001a2001920017200172001720017200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
